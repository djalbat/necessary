"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.get = get;
exports.post = post;
exports.request = request;
exports.default = void 0;
var _constants = require("../constants");
var _methods = require("../methods");
var _contentTypes = require("../contentTypes");
var _http = require("../utilities/http");
function get(host, uri, query, headers, callback) {
    if (callback === undefined) {
        callback = headers; ///
        headers = {
        };
    }
    var method = _methods.GET_METHOD, body = null;
    underwriteAccept(headers);
    request(host, uri, query, method, body, headers, callback);
}
function post(host, uri, query, body, headers, callback) {
    if (callback === undefined) {
        callback = headers; ///
        headers = {
        };
    }
    var method = _methods.POST_METHOD;
    underwriteAccept(headers);
    underwriteContentType(headers);
    request(host, uri, query, method, body, headers, callback);
}
function request(host, uri, query, method, body, headers, callback) {
    var url = (0, _http).urlFromHostURIAndQuery(host, uri, query), accept = headers[_constants.ACCEPT] || null, contentType = headers[_constants.CONTENT_TYPE] || null, xmlHttpRequest = new XMLHttpRequest();
    if (contentType === _contentTypes.APPLICATION_JSON_CONTENT_TYPE) {
        var json = body, jsonString = JSON.stringify(json);
        body = jsonString; ///
    }
    xmlHttpRequest.onreadystatechange = function() {
        var readyState = xmlHttpRequest.readyState, status = xmlHttpRequest.status, responseText = xmlHttpRequest.responseText;
        if (readyState == 4) {
            var body = responseText;
            if (accept === _contentTypes.APPLICATION_JSON_CONTENT_TYPE) {
                try {
                    var jsonString = body, json = JSON.parse(jsonString);
                    body = json; ///
                } catch (error) {
                    body = null;
                }
                callback(body, status);
            }
        }
    };
    xmlHttpRequest.open(method, url);
    if (accept !== null) {
        xmlHttpRequest.setRequestHeader(_constants.ACCEPT, accept);
    }
    if (contentType !== null) {
        xmlHttpRequest.setRequestHeader(_constants.CONTENT_TYPE, contentType);
    }
    body !== null ? xmlHttpRequest.send(body) : xmlHttpRequest.send();
}
var _default = {
    get: get,
    post: post,
    request: request
};
exports.default = _default;
function underwriteAccept(headers) {
    var name = _constants.ACCEPT, value = _contentTypes.APPLICATION_JSON_CONTENT_TYPE; ///
    (0, _http).underwrite(headers, name, value);
}
function underwriteContentType(headers) {
    var name = _constants.CONTENT_TYPE, value = _contentTypes.APPLICATION_JSON_CONTENT_TYPE; ///
    (0, _http).underwrite(headers, name, value);
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvYWpheC5qcyJdLCJuYW1lcyI6WyJBQ0NFUFQiLCJDT05URU5UX1RZUEUiLCJHRVRfTUVUSE9EIiwiUE9TVF9NRVRIT0QiLCJBUFBMSUNBVElPTl9KU09OX0NPTlRFTlRfVFlQRSIsInVuZGVyd3JpdGUiLCJ1cmxGcm9tSG9zdFVSSUFuZFF1ZXJ5IiwiZ2V0IiwiaG9zdCIsInVyaSIsInF1ZXJ5IiwiaGVhZGVycyIsImNhbGxiYWNrIiwidW5kZWZpbmVkIiwibWV0aG9kIiwiYm9keSIsInVuZGVyd3JpdGVBY2NlcHQiLCJyZXF1ZXN0IiwicG9zdCIsInVuZGVyd3JpdGVDb250ZW50VHlwZSIsInVybCIsImFjY2VwdCIsImNvbnRlbnRUeXBlIiwieG1sSHR0cFJlcXVlc3QiLCJYTUxIdHRwUmVxdWVzdCIsImpzb24iLCJqc29uU3RyaW5nIiwiSlNPTiIsInN0cmluZ2lmeSIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJyZXNwb25zZVRleHQiLCJwYXJzZSIsImVycm9yIiwib3BlbiIsInNldFJlcXVlc3RIZWFkZXIiLCJzZW5kIiwibmFtZSIsInZhbHVlIl0sIm1hcHBpbmdzIjoiQ0FBQSxVQUFZOzs7O1FBT0ksR0FBRyxHQUFILEdBQUc7UUFjSCxJQUFJLEdBQUosSUFBSTtRQWVKLE9BQU8sR0FBUCxPQUFPOztBQWxDYyxHQUFjLENBQWQsVUFBYztBQUNYLEdBQVksQ0FBWixRQUFZO0FBQ04sR0FBaUIsQ0FBakIsYUFBaUI7QUFDWixHQUFtQixDQUFuQixLQUFtQjtTQUV0RCxHQUFHLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxDQUFDO0lBQ3hELEVBQUUsRUFBRSxRQUFRLEtBQUssU0FBUyxFQUFFLENBQUM7UUFDM0IsUUFBUSxHQUFHLE9BQU8sQ0FBRSxDQUFHLEFBQUgsRUFBRyxBQUFILENBQUc7UUFDdkIsT0FBTyxHQUFHLENB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